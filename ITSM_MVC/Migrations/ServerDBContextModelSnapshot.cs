// <auto-generated />
using System;
using ITSM_MVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITSM_MVC.Migrations
{
    [DbContext(typeof(ServerDBContext))]
    partial class ServerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("itsm.parser.Model.GPlex", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("agent_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("call_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("caller_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("did")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("disc_party")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hold_in_queue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ivr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ivr_enter_time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ivr_language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("missed_call")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nick_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("service_time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("skill")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("skill_enter_time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("start_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("stop_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("time_in_ivr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("total_time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("GPlex");
                });

            modelBuilder.Entity("itsm.parser.Model.OTRS", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("accountedTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("age")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("articleTree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("closed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("customerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstLock")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstResponse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstResponseDiffInMin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstResponseInMin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("locks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("queue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("solutionDiffInMin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("solutionInMin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ticket_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userFirstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userLastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("OTRS");
                });
#pragma warning restore 612, 618
        }
    }
}
